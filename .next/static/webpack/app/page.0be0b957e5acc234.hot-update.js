"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/Smoke3D.tsx":
/*!************************************!*\
  !*** ./src/components/Smoke3D.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SmokeEffect: function() { return /* binding */ SmokeEffect; },\n/* harmony export */   \"default\": function() { return /* binding */ Smoke3D; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.core.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n/* __next_internal_client_entry_do_not_use__ default,SmokeEffect auto */ \nvar _s = $RefreshSig$();\n\n\nfunction Smoke3D(param) {\n    let { count = 1000, size = 0.02, speed = 0.5, color = \"#4a90e2\", opacity = 0.6 } = param;\n    _s();\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const sceneRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const rendererRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const particlesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const animationIdRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!containerRef.current) return;\n        console.log(\"Inicializando Smoke3D...\");\n        // Crear escena\n        const scene = new three__WEBPACK_IMPORTED_MODULE_2__.Scene();\n        sceneRef.current = scene;\n        // Crear cámara\n        const camera = new three__WEBPACK_IMPORTED_MODULE_2__.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        camera.position.z = 5;\n        // Crear renderer\n        const renderer = new three__WEBPACK_IMPORTED_MODULE_3__.WebGLRenderer({\n            alpha: true,\n            antialias: true\n        });\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.setClearColor(0x000000, 0);\n        rendererRef.current = renderer;\n        // Crear geometría de partículas\n        const geometry = new three__WEBPACK_IMPORTED_MODULE_2__.BufferGeometry();\n        const positions = new Float32Array(count * 3);\n        const velocities = new Float32Array(count * 3);\n        for(let i = 0; i < count; i++){\n            const idx = i * 3;\n            // Distribuir partículas en forma de espiral\n            const angle = i / count * Math.PI * 4;\n            const radius = 0.5 + i / count * 2;\n            const height = i / count * 3 - 1.5;\n            positions[idx] = Math.cos(angle) * radius + (Math.random() - 0.5) * 0.5;\n            positions[idx + 1] = height + (Math.random() - 0.5) * 0.3;\n            positions[idx + 2] = Math.sin(angle) * radius + (Math.random() - 0.5) * 0.5;\n            // Velocidades\n            velocities[idx] = (Math.random() - 0.5) * 0.01;\n            velocities[idx + 1] = Math.random() * 0.02 + 0.005;\n            velocities[idx + 2] = (Math.random() - 0.5) * 0.01;\n        }\n        geometry.setAttribute(\"position\", new three__WEBPACK_IMPORTED_MODULE_2__.BufferAttribute(positions, 3));\n        // Crear material de partículas\n        const material = new three__WEBPACK_IMPORTED_MODULE_2__.PointsMaterial({\n            size: size,\n            sizeAttenuation: true,\n            transparent: true,\n            opacity: opacity,\n            color: new three__WEBPACK_IMPORTED_MODULE_2__.Color(color),\n            blending: three__WEBPACK_IMPORTED_MODULE_2__.AdditiveBlending,\n            depthWrite: false\n        });\n        // Crear sistema de partículas\n        const particles = new three__WEBPACK_IMPORTED_MODULE_2__.Points(geometry, material);\n        scene.add(particles);\n        particlesRef.current = particles;\n        // Agregar renderer al DOM\n        containerRef.current.appendChild(renderer.domElement);\n        console.log(\"Smoke3D renderizado en DOM\");\n        // Función de animación\n        const animate = (time)=>{\n            if (!particlesRef.current) return;\n            const positions = particlesRef.current.geometry.attributes.position.array;\n            const timeSeconds = time * 0.001 * speed;\n            for(let i = 0; i < count; i++){\n                const idx = i * 3;\n                // Aplicar velocidades\n                positions[idx] += velocities[idx];\n                positions[idx + 1] += velocities[idx + 1];\n                positions[idx + 2] += velocities[idx + 2];\n                // Efecto de turbulencia\n                positions[idx] += Math.sin(timeSeconds + i * 0.1) * 0.001;\n                positions[idx + 2] += Math.cos(timeSeconds + i * 0.1) * 0.001;\n                // Resetear partículas que suben demasiado\n                if (positions[idx + 1] > 3) {\n                    positions[idx] = (Math.random() - 0.5) * 2;\n                    positions[idx + 1] = -2;\n                    positions[idx + 2] = (Math.random() - 0.5) * 2;\n                }\n                // Mantener partículas dentro de límites\n                if (Math.abs(positions[idx]) > 3) {\n                    positions[idx] *= 0.9;\n                }\n                if (Math.abs(positions[idx + 2]) > 3) {\n                    positions[idx + 2] *= 0.9;\n                }\n            }\n            particlesRef.current.geometry.attributes.position.needsUpdate = true;\n            // Movimiento de cámara sutil\n            camera.position.x = Math.sin(timeSeconds * 0.1) * 0.3;\n            camera.position.z = 5 + Math.cos(timeSeconds * 0.1) * 0.3;\n            camera.lookAt(0, 0, 0);\n            renderer.render(scene, camera);\n            animationIdRef.current = requestAnimationFrame(animate);\n        };\n        // Iniciar animación\n        animationIdRef.current = requestAnimationFrame(animate);\n        console.log(\"Animaci\\xf3n iniciada\");\n        // Manejar resize\n        const handleResize = ()=>{\n            if (!rendererRef.current || !camera) return;\n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n            rendererRef.current.setSize(window.innerWidth, window.innerHeight);\n        };\n        window.addEventListener(\"resize\", handleResize);\n        // Cleanup\n        return ()=>{\n            console.log(\"Limpiando Smoke3D...\");\n            if (animationIdRef.current) {\n                cancelAnimationFrame(animationIdRef.current);\n            }\n            if (rendererRef.current && containerRef.current) {\n                containerRef.current.removeChild(rendererRef.current.domElement);\n                rendererRef.current.dispose();\n            }\n            if (particlesRef.current) {\n                particlesRef.current.geometry.dispose();\n                if (Array.isArray(particlesRef.current.material)) {\n                    particlesRef.current.material.forEach((mat)=>mat.dispose());\n                } else {\n                    particlesRef.current.material.dispose();\n                }\n            }\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    }, [\n        count,\n        size,\n        speed,\n        color,\n        opacity\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        className: \"fixed inset-0 pointer-events-none z-0\",\n        style: {\n            background: \"transparent\",\n            mixBlendMode: \"screen\"\n        }\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Frances\\\\Downloads\\\\new\\\\src\\\\components\\\\Smoke3D.tsx\",\n        lineNumber: 183,\n        columnNumber: 5\n    }, this);\n}\n_s(Smoke3D, \"RlnAdfnaaiOu85Pz/KQ0Rt9DUqw=\");\n_c = Smoke3D;\n// Componente contenedor para múltiples capas de humo\nfunction SmokeEffect() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"fixed inset-0 pointer-events-none z-0\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Smoke3D, {\n                count: 800,\n                size: 0.03,\n                speed: 0.4,\n                color: \"#4a90e2\",\n                opacity: 0.5\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Frances\\\\Downloads\\\\new\\\\src\\\\components\\\\Smoke3D.tsx\",\n                lineNumber: 198,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Smoke3D, {\n                count: 600,\n                size: 0.02,\n                speed: 0.6,\n                color: \"#9b59b6\",\n                opacity: 0.4\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Frances\\\\Downloads\\\\new\\\\src\\\\components\\\\Smoke3D.tsx\",\n                lineNumber: 205,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Smoke3D, {\n                count: 400,\n                size: 0.04,\n                speed: 0.3,\n                color: \"#3498db\",\n                opacity: 0.3\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Frances\\\\Downloads\\\\new\\\\src\\\\components\\\\Smoke3D.tsx\",\n                lineNumber: 212,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Frances\\\\Downloads\\\\new\\\\src\\\\components\\\\Smoke3D.tsx\",\n        lineNumber: 197,\n        columnNumber: 5\n    }, this);\n}\n_c1 = SmokeEffect;\nvar _c, _c1;\n$RefreshReg$(_c, \"Smoke3D\");\n$RefreshReg$(_c1, \"SmokeEffect\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Smoke3D.tsx\n"));

/***/ })

});