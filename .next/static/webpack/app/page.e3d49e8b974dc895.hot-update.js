"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/Smoke3D.tsx":
/*!************************************!*\
  !*** ./src/components/Smoke3D.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SmokeEffect: function() { return /* binding */ SmokeEffect; },\n/* harmony export */   \"default\": function() { return /* binding */ Smoke3D; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.core.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n/* __next_internal_client_entry_do_not_use__ default,SmokeEffect auto */ \nvar _s = $RefreshSig$();\n\n\nfunction Smoke3D(param) {\n    let { count = 2000, size = 0.02, speed = 0.5, color = \"#4a90e2\", opacity = 0.6, intensity = 1.0, turbulence = 0.5, spread = 1.0 } = param;\n    _s();\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const sceneRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const rendererRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const particlesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const animationIdRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isLoaded, setIsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!containerRef.current) return;\n        // Crear escena\n        const scene = new three__WEBPACK_IMPORTED_MODULE_2__.Scene();\n        sceneRef.current = scene;\n        // Crear cámara con mejor perspectiva\n        const camera = new three__WEBPACK_IMPORTED_MODULE_2__.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.1, 1000);\n        camera.position.set(0, 0, 8);\n        camera.lookAt(0, 0, 0);\n        // Crear renderer con mejor configuración\n        const renderer = new three__WEBPACK_IMPORTED_MODULE_3__.WebGLRenderer({\n            alpha: true,\n            antialias: true,\n            powerPreference: \"high-performance\"\n        });\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.setClearColor(0x000000, 0);\n        renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n        rendererRef.current = renderer;\n        // Crear geometría de partículas optimizada\n        const geometry = new three__WEBPACK_IMPORTED_MODULE_2__.BufferGeometry();\n        const positions = new Float32Array(count * 3);\n        const velocities = new Float32Array(count * 3);\n        const sizes = new Float32Array(count);\n        const opacities = new Float32Array(count);\n        const colors = new Float32Array(count * 3);\n        const colorObj = new three__WEBPACK_IMPORTED_MODULE_2__.Color(color);\n        for(let i = 0; i < count; i++){\n            const idx = i * 3;\n            // Distribución más natural en forma de espiral ascendente\n            const angle = i / count * Math.PI * 6;\n            const radius = spread * (0.3 + i / count * 1.5);\n            const height = i / count * 3 - 1.5;\n            positions[idx] = Math.cos(angle) * radius + (Math.random() - 0.5) * 0.8;\n            positions[idx + 1] = height + (Math.random() - 0.5) * 0.5;\n            positions[idx + 2] = Math.sin(angle) * radius + (Math.random() - 0.5) * 0.8;\n            // Velocidades más naturales\n            velocities[idx] = (Math.random() - 0.5) * 0.008 * intensity;\n            velocities[idx + 1] = (Math.random() * 0.015 + 0.003) * intensity;\n            velocities[idx + 2] = (Math.random() - 0.5) * 0.008 * intensity;\n            // Tamaños variables para efecto más realista\n            sizes[i] = size * (0.3 + Math.random() * 1.7);\n            // Opacidades variables\n            opacities[i] = opacity * (0.4 + Math.random() * 0.6);\n            // Colores con variación sutil\n            const colorVariation = 0.1;\n            colors[idx] = colorObj.r + (Math.random() - 0.5) * colorVariation;\n            colors[idx + 1] = colorObj.g + (Math.random() - 0.5) * colorVariation;\n            colors[idx + 2] = colorObj.b + (Math.random() - 0.5) * colorVariation;\n        }\n        geometry.setAttribute(\"position\", new three__WEBPACK_IMPORTED_MODULE_2__.BufferAttribute(positions, 3));\n        geometry.setAttribute(\"size\", new three__WEBPACK_IMPORTED_MODULE_2__.BufferAttribute(sizes, 1));\n        geometry.setAttribute(\"opacity\", new three__WEBPACK_IMPORTED_MODULE_2__.BufferAttribute(opacities, 1));\n        geometry.setAttribute(\"color\", new three__WEBPACK_IMPORTED_MODULE_2__.BufferAttribute(colors, 3));\n        // Crear shader personalizado para mejor efecto de humo\n        const vertexShader = \"\\n      attribute float size;\\n      attribute float opacity;\\n      attribute vec3 color;\\n      varying float vOpacity;\\n      varying vec3 vColor;\\n      \\n      void main() {\\n        vOpacity = opacity;\\n        vColor = color;\\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n        gl_PointSize = size * (300.0 / -mvPosition.z);\\n        gl_Position = projectionMatrix * mvPosition;\\n      }\\n    \";\n        const fragmentShader = \"\\n      varying float vOpacity;\\n      varying vec3 vColor;\\n      \\n      void main() {\\n        float distance = length(gl_PointCoord - vec2(0.5));\\n        if (distance > 0.5) discard;\\n        \\n        float alpha = smoothstep(0.5, 0.0, distance) * vOpacity;\\n        gl_FragColor = vec4(vColor, alpha);\\n      }\\n    \";\n        // Crear material con shader personalizado\n        const material = new three__WEBPACK_IMPORTED_MODULE_2__.ShaderMaterial({\n            vertexShader,\n            fragmentShader,\n            transparent: true,\n            depthWrite: false,\n            blending: three__WEBPACK_IMPORTED_MODULE_2__.AdditiveBlending\n        });\n        // Crear sistema de partículas\n        const particles = new three__WEBPACK_IMPORTED_MODULE_2__.Points(geometry, material);\n        scene.add(particles);\n        particlesRef.current = particles;\n        // Agregar renderer al DOM\n        containerRef.current.appendChild(renderer.domElement);\n        setIsLoaded(true);\n        // Función de animación optimizada\n        const animate = (time)=>{\n            if (!particlesRef.current) return;\n            const positions = particlesRef.current.geometry.attributes.position.array;\n            const timeSeconds = time * 0.001 * speed;\n            for(let i = 0; i < count; i++){\n                const idx = i * 3;\n                // Aplicar velocidades base\n                positions[idx] += velocities[idx];\n                positions[idx + 1] += velocities[idx + 1];\n                positions[idx + 2] += velocities[idx + 2];\n                // Efecto de turbulencia más suave\n                const turbulenceFactor = turbulence * 0.002;\n                positions[idx] += Math.sin(timeSeconds * 0.5 + i * 0.1) * turbulenceFactor;\n                positions[idx + 2] += Math.cos(timeSeconds * 0.3 + i * 0.15) * turbulenceFactor;\n                // Efecto de rotación suave\n                const rotationRadius = Math.sqrt(positions[idx] * positions[idx] + positions[idx + 2] * positions[idx + 2]);\n                const rotationAngle = timeSeconds * 0.1;\n                const newX = positions[idx] * Math.cos(rotationAngle) - positions[idx + 2] * Math.sin(rotationAngle);\n                const newZ = positions[idx] * Math.sin(rotationAngle) + positions[idx + 2] * Math.cos(rotationAngle);\n                positions[idx] = newX;\n                positions[idx + 2] = newZ;\n                // Resetear partículas que suben demasiado\n                if (positions[idx + 1] > 4) {\n                    positions[idx] = (Math.random() - 0.5) * 2 * spread;\n                    positions[idx + 1] = -2;\n                    positions[idx + 2] = (Math.random() - 0.5) * 2 * spread;\n                }\n                // Mantener partículas dentro de límites con rebote suave\n                const maxRadius = 4 * spread;\n                const currentRadius = Math.sqrt(positions[idx] * positions[idx] + positions[idx + 2] * positions[idx + 2]);\n                if (currentRadius > maxRadius) {\n                    const scale = maxRadius / currentRadius;\n                    positions[idx] *= scale;\n                    positions[idx + 2] *= scale;\n                }\n            }\n            particlesRef.current.geometry.attributes.position.needsUpdate = true;\n            // Movimiento de cámara sutil para efecto dinámico\n            camera.position.x = Math.sin(timeSeconds * 0.05) * 0.3;\n            camera.position.y = Math.cos(timeSeconds * 0.03) * 0.2;\n            camera.position.z = 8 + Math.cos(timeSeconds * 0.02) * 0.5;\n            camera.lookAt(0, 0, 0);\n            renderer.render(scene, camera);\n            animationIdRef.current = requestAnimationFrame(animate);\n        };\n        // Iniciar animación\n        animationIdRef.current = requestAnimationFrame(animate);\n        // Manejar resize optimizado\n        const handleResize = ()=>{\n            if (!rendererRef.current || !camera) return;\n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n            rendererRef.current.setSize(window.innerWidth, window.innerHeight);\n            rendererRef.current.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n        };\n        window.addEventListener(\"resize\", handleResize);\n        // Cleanup mejorado\n        return ()=>{\n            if (animationIdRef.current) {\n                cancelAnimationFrame(animationIdRef.current);\n            }\n            if (rendererRef.current && containerRef.current) {\n                containerRef.current.removeChild(rendererRef.current.domElement);\n                rendererRef.current.dispose();\n            }\n            if (particlesRef.current) {\n                particlesRef.current.geometry.dispose();\n                if (Array.isArray(particlesRef.current.material)) {\n                    particlesRef.current.material.forEach((mat)=>mat.dispose());\n                } else {\n                    particlesRef.current.material.dispose();\n                }\n            }\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    }, [\n        count,\n        size,\n        speed,\n        color,\n        opacity,\n        intensity,\n        turbulence,\n        spread\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        className: \"fixed inset-0 pointer-events-none z-0\",\n        style: {\n            background: \"transparent\",\n            mixBlendMode: \"screen\",\n            opacity: isLoaded ? 1 : 0,\n            transition: \"opacity 1s ease-in-out\"\n        }\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Frances\\\\Downloads\\\\new\\\\src\\\\components\\\\Smoke3D.tsx\",\n        lineNumber: 249,\n        columnNumber: 5\n    }, this);\n}\n_s(Smoke3D, \"SzRbUrYB6sVvLXfHRbSTOIe0vNA=\");\n_c = Smoke3D;\n// Componente contenedor para múltiples capas de humo con diferentes configuraciones\nfunction SmokeEffect() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"fixed inset-0 pointer-events-none z-0\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Smoke3D, {\n                count: 1200,\n                size: 0.025,\n                speed: 0.4,\n                color: \"#4a90e2\",\n                opacity: 0.5,\n                intensity: 1.2,\n                turbulence: 0.6,\n                spread: 1.0\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Frances\\\\Downloads\\\\new\\\\src\\\\components\\\\Smoke3D.tsx\",\n                lineNumber: 267,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Smoke3D, {\n                count: 800,\n                size: 0.02,\n                speed: 0.6,\n                color: \"#9b59b6\",\n                opacity: 0.4,\n                intensity: 0.8,\n                turbulence: 0.8,\n                spread: 1.2\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Frances\\\\Downloads\\\\new\\\\src\\\\components\\\\Smoke3D.tsx\",\n                lineNumber: 279,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Smoke3D, {\n                count: 600,\n                size: 0.035,\n                speed: 0.3,\n                color: \"#3498db\",\n                opacity: 0.3,\n                intensity: 1.0,\n                turbulence: 0.4,\n                spread: 0.8\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Frances\\\\Downloads\\\\new\\\\src\\\\components\\\\Smoke3D.tsx\",\n                lineNumber: 291,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Smoke3D, {\n                count: 400,\n                size: 0.015,\n                speed: 0.5,\n                color: \"#ecf0f1\",\n                opacity: 0.2,\n                intensity: 0.6,\n                turbulence: 1.0,\n                spread: 1.5\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Frances\\\\Downloads\\\\new\\\\src\\\\components\\\\Smoke3D.tsx\",\n                lineNumber: 303,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Frances\\\\Downloads\\\\new\\\\src\\\\components\\\\Smoke3D.tsx\",\n        lineNumber: 265,\n        columnNumber: 5\n    }, this);\n}\n_c1 = SmokeEffect;\nvar _c, _c1;\n$RefreshReg$(_c, \"Smoke3D\");\n$RefreshReg$(_c1, \"SmokeEffect\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Smoke3D.tsx\n"));

/***/ })

});