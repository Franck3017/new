"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/category/[category]/page",{

/***/ "(app-pages-browser)/./src/hooks/useCategoryMovies.ts":
/*!****************************************!*\
  !*** ./src/hooks/useCategoryMovies.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCategoryMovies: function() { return /* binding */ useCategoryMovies; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_Notification__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/Notification */ \"(app-pages-browser)/./src/components/Notification.tsx\");\n\n\nconst useCategoryMovies = (param)=>{\n    let { config, category } = param;\n    const [movies, setMovies] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [page, setPage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1);\n    const [hasMore, setHasMore] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [sortBy, setSortBy] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"popularity\");\n    const [sortOrder, setSortOrder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"desc\");\n    const [searchQuery, setSearchQuery] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [filteredMovies, setFilteredMovies] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const { showError } = (0,_components_Notification__WEBPACK_IMPORTED_MODULE_1__.useNotifications)();\n    // Función para eliminar duplicados basada en ID\n    const removeDuplicates = (movies)=>{\n        const seen = new Set();\n        return movies.filter((movie)=>{\n            if (seen.has(movie.id)) {\n                return false;\n            }\n            seen.add(movie.id);\n            return true;\n        }).map((movie)=>({\n                ...movie,\n                media_type: (config === null || config === void 0 ? void 0 : config.mediaType) || \"movie\" // Usar el tipo de medio de la configuración\n            }));\n    };\n    // Función para cargar películas\n    const loadMovies = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async function() {\n        let pageNum = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, append = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n        if (!config) return;\n        try {\n            setLoading(true);\n            const response = await config.apiFunction(pageNum);\n            // Verificar que la respuesta tenga la estructura correcta\n            if (!response || !response.results || !Array.isArray(response.results)) {\n                setError(\"Formato de respuesta inv\\xe1lido\");\n                return;\n            }\n            const newMovies = response.results;\n            if (newMovies.length === 0) {\n                setHasMore(false);\n            } else {\n                setHasMore(pageNum < (response.total_pages || 1));\n            }\n            if (append) {\n                setMovies((prev)=>removeDuplicates([\n                        ...prev,\n                        ...newMovies\n                    ]));\n            } else {\n                setMovies(removeDuplicates(newMovies));\n            }\n            setError(null);\n        } catch (err) {\n            const errorMessage = err instanceof Error ? err.message : \"Error al cargar las pel\\xedculas\";\n            setError(errorMessage);\n            showError(\"Error al cargar pel\\xedculas\", errorMessage);\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        config,\n        showError\n    ]);\n    // Cargar películas iniciales\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (config) {\n            setPage(1);\n            setHasMore(true);\n            loadMovies(1, false);\n        }\n    }, [\n        category,\n        loadMovies\n    ]);\n    // Filtrar y ordenar películas\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Verificar que movies sea un array\n        if (!Array.isArray(movies)) {\n            setFilteredMovies([]);\n            return;\n        }\n        let filtered = [\n            ...movies\n        ]; // Crear una copia del array\n        // Filtrar por búsqueda\n        if (searchQuery) {\n            filtered = filtered.filter((movie)=>{\n                const title = movie.title || movie.name || \"\";\n                const overview = movie.overview || \"\";\n                const query = searchQuery.toLowerCase();\n                return title.toLowerCase().includes(query) || overview.toLowerCase().includes(query);\n            });\n        }\n        // Ordenar\n        filtered.sort((a, b)=>{\n            let aValue, bValue;\n            switch(sortBy){\n                case \"popularity\":\n                    aValue = a.popularity || 0;\n                    bValue = b.popularity || 0;\n                    break;\n                case \"rating\":\n                    aValue = a.vote_average || 0;\n                    bValue = b.vote_average || 0;\n                    break;\n                case \"date\":\n                    // Handle both movie release_date and TV series first_air_date\n                    const aDate = a.release_date || a.first_air_date || \"\";\n                    const bDate = b.release_date || b.first_air_date || \"\";\n                    aValue = new Date(aDate).getTime();\n                    bValue = new Date(bDate).getTime();\n                    break;\n                default:\n                    aValue = a.popularity || 0;\n                    bValue = b.popularity || 0;\n            }\n            return sortOrder === \"asc\" ? aValue - bValue : bValue - aValue;\n        });\n        setFilteredMovies(removeDuplicates(filtered));\n    }, [\n        movies,\n        searchQuery,\n        sortBy,\n        sortOrder\n    ]);\n    // Cargar más películas\n    const loadMore = ()=>{\n        if (!loading && hasMore) {\n            const nextPage = page + 1;\n            setPage(nextPage);\n            loadMovies(nextPage, true);\n        }\n    };\n    // Reintentar carga\n    const retry = ()=>{\n        loadMovies(1, false);\n    };\n    return {\n        // Estado\n        movies,\n        filteredMovies,\n        loading,\n        error,\n        hasMore,\n        sortBy,\n        sortOrder,\n        searchQuery,\n        // Acciones\n        setSortBy,\n        setSortOrder,\n        setSearchQuery,\n        loadMore,\n        retry\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useCategoryMovies.ts\n"));

/***/ })

});